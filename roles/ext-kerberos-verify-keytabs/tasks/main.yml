---
- name: Copy mapr.keytab
  copy: src={{ mapr_kerberos_local_keytabs_dir }}/{{ ansible_fqdn }}.keytab dest=/tmp/mapr.keytab

- name: Verify {{ mapr_user }}/<hostname> keytab
  command: kinit -k -t /tmp/mapr.keytab {{ mapr_user }}/{{ ansible_fqdn }}@{{ mapr_kerberos_realm }}
#  when: inventory_hostname in groups["mapr-core"]
- name: Display current ticket mapr
  command: klist
  register: klist_out
#  when: inventory_hostname in groups["mapr-core"]
- debug: msg="{{ klist_out }}"
#  when: inventory_hostname in groups["mapr-core"]
- name: Destroy current ticket
  command: kdestroy
#  when: inventory_hostname in groups["mapr-core"]

- name: Verify HTTP/<hostname> keytab
  command: kinit -k -t /tmp/mapr.keytab HTTP/{{ ansible_fqdn }}@{{ mapr_kerberos_realm }}
#  when: inventory_hostname in groups["mapr-core"]
- name: Display current ticket mapr
  command: klist
  register: klist_out
#  when: inventory_hostname in groups["mapr-core"]
- debug: msg="{{ klist_out }}"
#  when: inventory_hostname in groups["mapr-core"]
- name: Destroy current ticket
  command: kdestroy
#  when: inventory_hostname in groups["mapr-core"]

- name: Verify Cluster keytab
  command: kinit -k -t /tmp/mapr.keytab {{ mapr_user }}/{{ cluster_name }}
- name: Display current ticket mapr
  command: klist
  register: klist_out
- debug: msg="{{ klist_out }}"
- name: Destroy current ticket
  command: kdestroy

- name: Clean up existing keytab
  file: path=/tmp/mapr.keytab state=absent
